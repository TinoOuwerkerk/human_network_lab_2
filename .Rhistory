})
# create subgraphs
#gender
females = delete_vertices(Highschool, V(Highschool)[gender != "female"])
males = delete_vertices(Highschool, V(Highschool)[gender != "males"])
unknown = delete_vertices(Highschool, V(Highschool)[gender != "unknown"])
# halls
hall1501 <- delete_vertices(Highschool, V(Highschool)[hall != "1501"])
hall1502 <- delete_vertices(Highschool, V(Highschool)[hall != "1502"])
hall1503 <- delete_vertices(Highschool, V(Highschool)[hall != "1503"])
hall1504 <- delete_vertices(Highschool, V(Highschool)[hall != "1504"])
hall1505 <- delete_vertices(Highschool, V(Highschool)[hall != "1505"])
#Codes to visualize the network and calculate subgraph density:
## visualize the network by gender###
library(RColorBrewer)
coul <- brewer.pal(length(unique( V(Highschool)$gender)), "Set2")
my_color <- coul[as.numeric(as.factor(V(Highschool)$gender))]
set.seed(10)
plot(Highschool, vertex.color = my_color,
vertex.size=5,
layout=layout.fruchterman.reingold(Highschool),vertex.label=NA,
main="Highschool network by gender")
legend("bottomleft", legend=levels(as.factor(V(Highschool)$gender)) ,col = coul , bty =
"n", pch=20 , pt.cex = 1.5, cex = 1.5, horiz = FALSE, inset = c(0.1, 0.1))
#introduce subgraph by gender, calculate their edge densities
group_gender <- as.factor(unique(V(Highschool)$gender))
sapply(levels(group_gender), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$gender==x))
paste0("Density for ", x, " friends is ", edge_density(y))
})
#introduce subgraph by gender, calculate their edge densities
group_hall <- as.factor(unique(V(Highschool)$hall))
sapply(levels(group_hall), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$hall==x))
paste0("Density for ", x, " friends is ", edge_density(y))
})
# create subgraphs
#gender
females = delete_vertices(Highschool, V(Highschool)[gender != "female"])
males = delete_vertices(Highschool, V(Highschool)[gender != "males"])
unknown = delete_vertices(Highschool, V(Highschool)[gender != "unknown"])
# halls
hall1501 <- delete_vertices(Highschool, V(Highschool)[hall != "1501"])
hall1502 <- delete_vertices(Highschool, V(Highschool)[hall != "1502"])
hall1503 <- delete_vertices(Highschool, V(Highschool)[hall != "1503"])
hall1504 <- delete_vertices(Highschool, V(Highschool)[hall != "1504"])
hall1505 <- delete_vertices(Highschool, V(Highschool)[hall != "1505"])
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
# Question 1
#function to calculate centrality metrics
degree_n = (degree(Highschool, mode = "all"))
closeness_n = (closeness(Highschool, normalized = TRUE))
betweenness_n = betweenness(Highschool, directed = FALSE, normalized = TRUE)
eigen_n = eigen_centrality(Highschool)
which.max(degree_n)
which.max(closeness_n)
which.max(betweenness_n)
which.max(eigen_n$vector)
#function to visualize the network (with interaction)
set.seed(100)
Highschool_interactive_layout<-visNetwork(data.frame(id=V(Highschool)$name),
highschool_edges, main = "Highschool",submain="Can zoom in/out to check the IDs and
ties") %>%
visIgraphLayout(layout = "layout_nicely",smooth = FALSE) %>%
visNodes(shape="circle",label = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, hover = T), nodesIdSelection = T)
Highschool_interactive_layout
# Question 2
# Correlation High school network
ggplot() +
geom_point(aes(degree_n, betweenness_n)) +
geom_smooth(aes(degree_n, betweenness_n), method="lm") +
stat_cor(aes(degree_n, betweenness_n), method = "pearson")
ggplot() +
geom_point(aes(degree_n, closeness_n)) +
geom_smooth(aes(degree_n, closeness_n), method="lm") +
stat_cor(aes(degree_n, closeness_n), method = "pearson")
ggplot() +
geom_point(aes(degree_n, eigen_n$vector)) +
geom_smooth(aes(degree_n, eigen_n$vector), method="lm") +
stat_cor(aes(degree_n, eigen_n$vector), method = "pearson")
# Correlation Facebook network
degree_n_fb = (degree(Facebook, mode = "all"))
closeness_n_fb = (closeness(Facebook, normalized = TRUE))
betweenness_n_fb = betweenness(Facebook, directed = FALSE, normalized = TRUE)
eigen_n_fb = eigen_centrality(Facebook)
ggplot() +
geom_point(aes(degree_n_fb, betweenness_n_fb)) +
geom_smooth(aes(degree_n_fb, betweenness_n_fb), method="lm") +
stat_cor(aes(degree_n_fb, betweenness_n_fb), method = "pearson")
ggplot() +
geom_point(aes(degree_n_fb, closeness_n_fb)) +
geom_smooth(aes(degree_n_fb, closeness_n_fb), method="lm") +
stat_cor(aes(degree_n_fb, closeness_n_fb), method = "pearson")
ggplot() +
geom_point(aes(degree_n_fb, eigen_n_fb$vector)) +
geom_smooth(aes(degree_n_fb, eigen_n_fb$vector), method="lm") +
stat_cor(aes(degree_n_fb, eigen_n_fb$vector), method = "pearson")
h_distance =
distances(
Highschool,
v = V(Highschool),
to = V(Highschool),
mode = c("all", "out", "in"),
weights = NULL)
#Shortest path lengths between every pair of two nodes in the high school network
fb_distance =
distances(
Facebook,
v = V(Facebook),
to = V(Facebook),
mode = c("all", "out", "in"),
weights = NULL)
#Shortest path lengths between every pair of two nodes in the Facebook network
df_h <- data.frame(student = row.names(h_distance), as.data.frame(h_distance), row.names = NULL)
df_h$S1
# calculate percentiles
probs = c(0.5, 0.9)
quantiles <- quantile(df_h$S1, prob=probs)
quant <- factor(findInterval(df_h$S1, quantiles))
ggplot(df_h, aes(S1)) +
geom_histogram(bins=6, fill = "blue", color = "black")
#Codes to visualize the network and calculate subgraph density:
## visualize the network by gender###
library(RColorBrewer)
coul <- brewer.pal(length(unique( V(Highschool)$gender)), "Set2")
my_color <- coul[as.numeric(as.factor(V(Highschool)$gender))]
set.seed(10)
plot(Highschool, vertex.color = my_color,
vertex.size=5,
layout=layout.fruchterman.reingold(Highschool),vertex.label=NA,
main="Highschool network by gender")
legend("bottomleft", legend=levels(as.factor(V(Highschool)$gender)) ,col = coul , bty =
"n", pch=20 , pt.cex = 1.5, cex = 1.5, horiz = FALSE, inset = c(0.1, 0.1))
#introduce subgraph by gender, calculate their edge densities
group_gender <- as.factor(unique(V(Highschool)$gender))
sapply(levels(group_gender), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$gender==x))
paste0("Density for ", x, " friends is ", edge_density(y) )
})
#introduce subgraph by gender, calculate their edge densities
group_hall <- as.factor(unique(V(Highschool)$hall))
sapply(levels(group_hall), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$hall==x))
paste0("Density for ", x, " friends is ", edge_density(y))
})
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
edge_density(Highschool)
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
#Codes to visualize the network and calculate subgraph density:
## visualize the network by gender###
library(RColorBrewer)
coul <- brewer.pal(length(unique( V(Highschool)$gender)), "Set2")
my_color <- coul[as.numeric(as.factor(V(Highschool)$gender))]
set.seed(10)
plot(Highschool, vertex.color = my_color,
vertex.size=5,
layout=layout.fruchterman.reingold(Highschool),vertex.label=NA,
main="Highschool network by gender")
legend("bottomleft", legend=levels(as.factor(V(Highschool)$gender)) ,col = coul , bty =
"n", pch=20 , pt.cex = 1.5, cex = 1.5, horiz = FALSE, inset = c(0.1, 0.1))
#introduce subgraph by gender, calculate their edge densities
group_gender <- as.factor(unique(V(Highschool)$gender))
sapply(levels(group_gender), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$gender==x))
paste0("Density for ", x, " friends is ", edge_density(y) )
})
#introduce subgraph by gender, calculate their edge densities
group_hall <- as.factor(unique(V(Highschool)$hall))
sapply(levels(group_hall), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$hall==x))
paste0("Density for ", x, " friends is ", edge_density(y))
})
{r}
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
#Codes to visualize the network and calculate subgraph density:
## visualize the network by gender###
library(RColorBrewer)
coul <- brewer.pal(length(unique( V(Highschool)$gender)), "Set2")
my_color <- coul[as.numeric(as.factor(V(Highschool)$gender))]
set.seed(10)
plot(Highschool, vertex.color = my_color,
vertex.size=5,
layout=layout.fruchterman.reingold(Highschool),vertex.label=NA,
main="Highschool network by gender")
legend("bottomleft", legend=levels(as.factor(V(Highschool)$gender)) ,col = coul , bty =
"n", pch=20 , pt.cex = 1.5, cex = 1.5, horiz = FALSE, inset = c(0.1, 0.1))
#introduce subgraph by gender, calculate their edge densities
group_gender <- as.factor(unique(V(Highschool)$gender))
sapply(levels(group_gender), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$gender==x))
paste0("Density for ", x, " friends is ", edge_density(y) )
})
#introduce subgraph by gender, calculate their edge densities
group_hall <- as.factor(unique(V(Highschool)$hall))
sapply(levels(group_hall), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$hall==x))
paste0("Density for ", x, " friends is ", edge_density(y))
})
edge_density(Highschool)
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
#Codes to visualize the network and calculate subgraph density:
## visualize the network by gender###
library(RColorBrewer)
coul <- brewer.pal(length(unique( V(Highschool)$gender)), "Set2")
my_color <- coul[as.numeric(as.factor(V(Highschool)$gender))]
set.seed(10)
plot(Highschool, vertex.color = my_color,
vertex.size=5,
layout=layout.fruchterman.reingold(Highschool),vertex.label=NA,
main="Highschool network by gender")
legend("bottomleft", legend=levels(as.factor(V(Highschool)$gender)) ,col = coul , bty =
"n", pch=20 , pt.cex = 1.5, cex = 1.5, horiz = FALSE, inset = c(0.1, 0.1))
#introduce subgraph by gender, calculate their edge densities
group_gender <- as.factor(unique(V(Highschool)$gender))
sapply(levels(group_gender), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$gender==x))
paste0("Density for ", x, " friends is ", edge_density(y) )
})
#introduce subgraph by gender, calculate their edge densities
group_hall <- as.factor(unique(V(Highschool)$hall))
sapply(levels(group_hall), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$hall==x))
paste0("Density for ", x, " friends is ", edge_density(y), '<br/>')
})
edge_density(Highschool)
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
#Codes to visualize the network and calculate subgraph density:
## visualize the network by gender###
library(RColorBrewer)
coul <- brewer.pal(length(unique( V(Highschool)$gender)), "Set2")
my_color <- coul[as.numeric(as.factor(V(Highschool)$gender))]
set.seed(10)
plot(Highschool, vertex.color = my_color,
vertex.size=5,
layout=layout.fruchterman.reingold(Highschool),vertex.label=NA,
main="Highschool network by gender")
legend("bottomleft", legend=levels(as.factor(V(Highschool)$gender)) ,col = coul , bty =
"n", pch=20 , pt.cex = 1.5, cex = 1.5, horiz = FALSE, inset = c(0.1, 0.1))
#introduce subgraph by gender, calculate their edge densities
group_gender <- as.factor(unique(V(Highschool)$gender))
sapply(levels(group_gender), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$gender==x))
paste0("Density for ", x, " friends is ", edge_density(y), '\n')
})
#introduce subgraph by gender, calculate their edge densities
group_hall <- as.factor(unique(V(Highschool)$hall))
sapply(levels(group_hall), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$hall==x))
paste0("Density for ", x, " friends is ", edge_density(y), '\n')
})
edge_density(Highschool)
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
#Codes to visualize the network and calculate subgraph density:
## visualize the network by gender###
library(RColorBrewer)
coul <- brewer.pal(length(unique( V(Highschool)$gender)), "Set2")
my_color <- coul[as.numeric(as.factor(V(Highschool)$gender))]
set.seed(10)
plot(Highschool, vertex.color = my_color,
vertex.size=5,
layout=layout.fruchterman.reingold(Highschool),vertex.label=NA,
main="Highschool network by gender")
legend("bottomleft", legend=levels(as.factor(V(Highschool)$gender)) ,col = coul , bty =
"n", pch=20 , pt.cex = 1.5, cex = 1.5, horiz = FALSE, inset = c(0.1, 0.1))
#introduce subgraph by gender, calculate their edge densities
group_gender <- as.factor(unique(V(Highschool)$gender))
sapply(levels(group_gender), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$gender==x))
paste0("Density for ", x, " friends is ", edge_density(y), '\n')
})
#introduce subgraph by gender, calculate their edge densities
group_hall <- as.factor(unique(V(Highschool)$hall))
sapply(levels(group_hall), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$hall==x))
cat(paste0("Density for ", x, " friends is ", edge_density(y), '\n'))
})
edge_density(Highschool)
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
#Codes to visualize the network and calculate subgraph density:
## visualize the network by gender###
library(RColorBrewer)
coul <- brewer.pal(length(unique( V(Highschool)$gender)), "Set2")
my_color <- coul[as.numeric(as.factor(V(Highschool)$gender))]
set.seed(10)
plot(Highschool, vertex.color = my_color,
vertex.size=5,
layout=layout.fruchterman.reingold(Highschool),vertex.label=NA,
main="Highschool network by gender")
legend("bottomleft", legend=levels(as.factor(V(Highschool)$gender)) ,col = coul , bty =
"n", pch=20 , pt.cex = 1.5, cex = 1.5, horiz = FALSE, inset = c(0.1, 0.1))
#introduce subgraph by gender, calculate their edge densities
group_gender <- as.factor(unique(V(Highschool)$gender))
sapply(levels(group_gender), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$gender==x))
cat(paste0("Density for ", x, " friends is ", edge_density(y), '\n'))
})
#introduce subgraph by gender, calculate their edge densities
group_hall <- as.factor(unique(V(Highschool)$hall))
sapply(levels(group_hall), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$hall==x))
cat(paste0("Density for ", x, " friends is ", edge_density(y), '\n'))
})
edge_density(Highschool)
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
paste0('Density for the whole network is', edge_density(Highschool))
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
#Codes to visualize the network and calculate subgraph density:
## visualize the network by gender###
library(RColorBrewer)
coul <- brewer.pal(length(unique( V(Highschool)$gender)), "Set2")
my_color <- coul[as.numeric(as.factor(V(Highschool)$gender))]
set.seed(10)
plot(Highschool, vertex.color = my_color,
vertex.size=5,
layout=layout.fruchterman.reingold(Highschool),vertex.label=NA,
main="Highschool network by gender")
legend("bottomleft", legend=levels(as.factor(V(Highschool)$gender)) ,col = coul , bty =
"n", pch=20 , pt.cex = 1.5, cex = 1.5, horiz = FALSE, inset = c(0.1, 0.1))
#introduce subgraph by gender, calculate their edge densities
group_gender <- as.factor(unique(V(Highschool)$gender))
sapply(levels(group_gender), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$gender==x))
cat(paste0("Density for ", x, " friends is ", edge_density(y), '\n'))
})
#introduce subgraph by gender, calculate their edge densities
group_hall <- as.factor(unique(V(Highschool)$hall))
sapply(levels(group_hall), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$hall==x))
cat(paste0("Density for ", x, " friends is ", edge_density(y), '\n'))
})
paste0('Density for the whole network is', edge_density(Highschool))
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
induced_subgraph(Highschool, V(Highschool)$gender=='unknown')
#call library
library(igraph)
library(RColorBrewer)
library(visNetwork)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("C:/Users/tinot/uu/human_network_lab_2")
#datainput
highschool_edge<-read.csv("Highschool_network_edge.csv",header=FALSE)
highschool_att<-read.csv("Highschool_network_att.csv",header = TRUE)
facebook_edge<-read.csv("Facebook_network_edge.csv",header=FALSE)
facebook_att<-read.csv("Facebook_network_att.csv",header = TRUE)
#Codes to visualize the network and calculate subgraph density:
## visualize the network by gender###
library(RColorBrewer)
coul <- brewer.pal(length(unique( V(Highschool)$gender)), "Set2")
my_color <- coul[as.numeric(as.factor(V(Highschool)$gender))]
set.seed(10)
plot(Highschool, vertex.color = my_color,
vertex.size=5,
layout=layout.fruchterman.reingold(Highschool),vertex.label=NA,
main="Highschool network by gender")
legend("bottomleft", legend=levels(as.factor(V(Highschool)$gender)) ,col = coul , bty =
"n", pch=20 , pt.cex = 1.5, cex = 1.5, horiz = FALSE, inset = c(0.1, 0.1))
#introduce subgraph by gender, calculate their edge densities
group_gender <- as.factor(unique(V(Highschool)$gender))
sapply(levels(group_gender), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$gender==x))
cat(paste0("Density for ", x, " friends is ", edge_density(y), '\n'))
})
#introduce subgraph by gender, calculate their edge densities
group_hall <- as.factor(unique(V(Highschool)$hall))
sapply(levels(group_hall), function(x) {
y <- induced_subgraph(Highschool, which(V(Highschool)$hall==x))
cat(paste0("Density for ", x, " friends is ", edge_density(y), '\n'))
})
paste0('Density for the whole network is ', edge_density(Highschool))
unknown = induced_subgraph(Highschool, V(Highschool)$gender=='unknown')
Highschool_interactive_layout<-visNetwork(data.frame(id=V(unknown)$name),
highschool_edges, main = "Highschool",submain="Can zoom in/out to check the IDs and
ties") %>%
visIgraphLayout(layout = "layout_nicely",smooth = FALSE) %>%
visNodes(shape="circle",label = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, hover = T), nodesIdSelection = T)
Highschool_interactive_layout
